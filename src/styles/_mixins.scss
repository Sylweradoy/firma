@use "sass:map";
@use "sass:math";
@use "styles/tokens" as *;

// ===== FUNKCJE POMOCNICZE =====
@function space($n) { @return map.get($space, $n); }
@function z($name) { @return map.get($z, $name); }
@function radius($name) { @return map.get($radii, $name); }
@function shadow($name) { @return map.get($shadows, $name); }

// ===== MEDIA QUERIES =====
// ↑ od breakpointu w górę
@mixin mq($from, $to: null) {
  $min: map.get($breakpoints, $from);
  @if $min == null { @error "Unknown breakpoint: #{$from}"; }

  @if $to == null {
    @media (min-width: $min) { @content; }
  } @else {
    $max: map.get($breakpoints, $to);
    @if $max == null { @error "Unknown breakpoint: #{$to}"; }
    @media (min-width: $min) and (max-width: calc(#{$max} - 0.02px)) { @content; }
  }
}

// ↓ do breakpointu w dół
@mixin mq-down($to) {
  $max: map.get($breakpoints, $to);
  @if $max == null { @error "Unknown breakpoint: #{$to}"; }
  @media (max-width: calc(#{$max} - 0.02px)) { @content; }
}

// ===== LAYOUT =====
@mixin container($max: $container-w, $px: clamp(12px, 3vw, 32px)) {
  max-width: $max;
  margin-inline: auto;
  padding-inline: $px;
}

// Właściwość płynna (clamp) między widokami
@mixin fluid($property, $min, $max, $vw-from: 360px, $vw-to: 1280px) {
  #{$property}: clamp(
    #{$min},
    calc(#{$min} + (#{$max} - #{$min}) * ((100vw - #{$vw-from}) / (#{math.max(1px, $vw-to - $vw-from)}))),
    #{$max}
  );
}

// ===== UI UTILS =====
@mixin focus-ring {
  outline: 2px solid $color-accent;
  outline-offset: 2px;
}

@mixin truncate { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin card {
  border: 1px solid $color-border;
  border-radius: map.get($radii, lg);
  background: rgba(255,255,255,.03);
  box-shadow: map.get($shadows, md);
}
